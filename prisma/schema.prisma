// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Prisma Models
model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String   @db.VarChar(100)
  lastName  String   @db.VarChar(100)
  role      Role     @default(USER)
  email     String   @unique
  password  String   @db.VarChar(100)
  quiz      Quiz[]
  signal    Signal[]
}

model Quiz {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  description String?    @db.VarChar(100)
  creatorId   Int
  creator     User       @relation(fields: [creatorId], references: [id])
  title       String     @db.VarChar(100)
  isPublic    Boolean    @default(true)
  isDeleted   Boolean    @default(false)
  questions   Question[]
  signal      Signal[]
  urlImg      String?    @db.VarChar(100)
}

model Question {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  questionText String   @db.VarChar(100)
  explanation  String   @db.VarChar(100)
  quizId       Int
  quiz         Quiz     @relation(fields: [quizId], references: [id])
  options      Option[]
}

model Option {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  text       String   @db.VarChar(100)
  isCorrect  Boolean  @default(false)
  questionId Int
  question   Question @relation(fields: [questionId], references: [id])
}

model Signal {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  creatorId    Int
  creator      User     @relation(fields: [creatorId], references: [id])
  quiz         Quiz     @relation(fields: [quizId], references: [id])
  quizId       Int
  isForCreator Boolean  @default(false)
  isForAdmin   Boolean  @default(false)
}

enum Role {
  USER
  ADMIN
  CREATOR
}
